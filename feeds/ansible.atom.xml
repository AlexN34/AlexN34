<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alex's Home page - ansible</title><link href="https://AlexN34.github.io/" rel="alternate"></link><link href="https://AlexN34.github.io/feeds/ansible.atom.xml" rel="self"></link><id>https://AlexN34.github.io/</id><updated>2018-04-12T16:23:00+10:00</updated><entry><title>Learning Ansible</title><link href="https://AlexN34.github.io/blog/2018/learning-ansible" rel="alternate"></link><published>2018-04-12T16:23:00+10:00</published><updated>2018-04-12T16:23:00+10:00</updated><author><name>Alex Nguyen</name></author><id>tag:alexn34.github.io,2018-04-12:/blog/2018/learning-ansible</id><summary type="html">&lt;p&gt;New DevOps tool: Ansible&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Moving into Digital Platforms (Cloud and DevOps kind of work) is going to require a new toolset - knowing Python, it seems like Ansible would be a good choice to pick up for infrastructure automation.&lt;/p&gt;
&lt;p&gt;Toying around with local hosts looks promising so far - links to playbooks &lt;a href="https://github.com/AlexN34/learn-ansible"&gt;here&lt;/a&gt;. Next step is orchestrating real servers - fingers crossed I'll get to explore/use some the extensibility features for work!&lt;/p&gt;
&lt;h3&gt;Tidbits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ansible runs with central controller node running commands on other nodes (which don't necessarily have Ansible installed)&lt;/li&gt;
&lt;li&gt;SSH is used so as long as that's ok you can orchestrate other servers&lt;/li&gt;
&lt;li&gt;Host node should run Linux, scripts can talk to Windows nodes (using specific modules e.g. &lt;code&gt;win_shell&lt;/code&gt; instead of &lt;code&gt;shell&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The INI configuration file is called inventory (&lt;code&gt;-i&lt;/code&gt; flag) - list host address of grouped servers&lt;/li&gt;
&lt;li&gt;In playbook, can set variables with &lt;code&gt;vars&lt;/code&gt; and refer throughout playbook YML using &lt;code&gt;{{}}&lt;/code&gt; syntax&lt;/li&gt;
&lt;li&gt;Can configure custom behaviour on repeat runs through &lt;code&gt;notify&lt;/code&gt; (in conjunction with &lt;code&gt;changed_when&lt;/code&gt;) and &lt;code&gt;handlers&lt;/code&gt; syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Commands&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ansible is installed and run as a python package: &lt;code&gt;pip install ansible ansible-lint&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ansible -i &amp;lt;inventory&amp;gt; &amp;lt;host&amp;gt; -m &amp;lt;ansible-module&amp;gt; -a &amp;lt;module-arguments&amp;gt;&lt;/code&gt; to run commands on host/group of hosts interactively on a shell e.g. &lt;code&gt;ansible -i webapp local -m command -a "uname -r"&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ansible &lt;code&gt;playbook.yml&lt;/code&gt; is analogous to &lt;code&gt;docker-compose.yml&lt;/code&gt;: YAML-fied version of the active ad-hoc command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansible-playbook -i &amp;lt;inventory-file&amp;gt; &amp;lt;playbook.yml&amp;gt;&lt;/code&gt; to a run a playbook &lt;/li&gt;
&lt;li&gt;&lt;code&gt;ansible-doc&lt;/code&gt; is &lt;code&gt;man&lt;/code&gt; for modules&lt;/li&gt;
&lt;/ul&gt;</content><category term="ansible"></category><category term="devops"></category></entry></feed>